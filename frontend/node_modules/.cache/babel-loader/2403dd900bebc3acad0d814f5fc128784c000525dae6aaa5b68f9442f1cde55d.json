{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive - University of Derby\\\\Desktop\\\\Neurolytix\\\\frontend\\\\src\\\\components\\\\ForecastChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"../utils/axiosConfig\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastChart = ({\n  datasetId,\n  actualColumn\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await axios.get(\"/visualization/forecast_visualization\", {\n        params: {\n          dataset_id: datasetId,\n          actual_column: actualColumn\n        }\n      });\n      const chartData = res.data.dates.map((date, idx) => {\n        const item = {\n          date,\n          actual: res.data.actual[idx]\n        };\n        Object.keys(res.data.forecasts).forEach(model => {\n          item[model] = res.data.forecasts[model][idx];\n        });\n        return item;\n      });\n      setData(chartData);\n    };\n    fetchData();\n  }, [datasetId, actualColumn]);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 0,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"actual\",\n        stroke: \"#000000\",\n        strokeWidth: 2,\n        dot: {\n          r: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), data[0] && Object.keys(data[0]).filter(key => key !== \"date\" && key !== \"actual\").map((model, idx) => /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: model,\n        stroke: [\"#ff0000\", \"#00cc00\", \"#0000ff\"][idx % 3],\n        dot: false\n      }, model, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ForecastChart;\nexport default ForecastChart;\nvar _c;\n$RefreshReg$(_c, \"ForecastChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ForecastChart","datasetId","actualColumn","_s","data","setData","fetchData","res","get","params","dataset_id","actual_column","chartData","dates","map","date","idx","item","actual","Object","keys","forecasts","forEach","model","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","strokeWidth","dot","r","filter","key","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive - University of Derby/Desktop/Neurolytix/frontend/src/components/ForecastChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../utils/axiosConfig\";\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst ForecastChart = ({ datasetId, actualColumn }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(\"/visualization/forecast_visualization\", {\r\n        params: { dataset_id: datasetId, actual_column: actualColumn }\r\n      });\r\n\r\n      const chartData = res.data.dates.map((date, idx) => {\r\n        const item = { date, actual: res.data.actual[idx] };\r\n        Object.keys(res.data.forecasts).forEach(model => {\r\n          item[model] = res.data.forecasts[model][idx];\r\n        });\r\n        return item;\r\n      });\r\n      setData(chartData);\r\n    };\r\n    fetchData();\r\n  }, [datasetId, actualColumn]);\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <LineChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"actual\" stroke=\"#000000\" strokeWidth={2} dot={{ r: 2 }} />\r\n        {data[0] && Object.keys(data[0]).filter(key => key !== \"date\" && key !== \"actual\").map((model, idx) => (\r\n          <Line key={model} type=\"monotone\" dataKey={model} stroke={[\"#ff0000\",\"#00cc00\",\"#0000ff\"][idx % 3]} dot={false} />\r\n        ))}\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default ForecastChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}